apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: otel-collector
    app.kubernetes.io/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acs
      app.kubernetes.io/component: otel-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acs
        app.kubernetes.io/component: otel-collector
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        command:
        - /otelcol-contrib
        - --config=/conf/otel-collector-config.yaml
        ports:
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        - containerPort: 8888
          name: prometheus
        volumeMounts:
        - name: otel-config
          mountPath: /conf
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: otel-config
        configMap:
          name: acs-otel-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: otel-collector
spec:
  type: ClusterIP
  ports:
  - port: 4317
    targetPort: 4317
    name: otlp-grpc
  - port: 4318
    targetPort: 4318
    name: otlp-http
  - port: 8888
    targetPort: 8888
    name: prometheus
  selector:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acs
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acs
        app.kubernetes.io/component: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
          name: prometheus
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=30d'
        - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 2Gi
      volumes:
      - name: prometheus-config
        configMap:
          name: acs-prometheus-config
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: prometheus
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    name: prometheus
  selector:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: grafana
    app.kubernetes.io/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acs
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acs
        app.kubernetes.io/component: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: "https://grafana.acs.example.com"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: grafana
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    name: grafana
  selector:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: acs-monitoring-ingress
  namespace: acs-system
  labels:
    app.kubernetes.io/name: acs
    app.kubernetes.io/component: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - grafana.acs.example.com
    - prometheus.acs.example.com
    secretName: acs-monitoring-tls
  rules:
  - host: grafana.acs.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
  - host: prometheus.acs.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090